---

- name: deploy - fetch source
  git:
    repo: "{{ phoenix_app_repository }}"
    dest: "{{ phoenix_app_path }}/{{ phoenix_app_name }}"
    clone: yes
    force: yes
    accept_hostkey: yes
    version: "{{ phoenix_app_version }}"
  become: yes
  become_user: "{{ phoenix_app_user }}"
  when: phoenix_app_repository is defined
  register: phoenix_app_clone
  notify: phoenix_app - restart

- name: deploy - npm install
  npm:
    path: "{{ phoenix_app_path }}/{{ phoenix_app_name }}"
    global: no
    production: yes
    state: latest
  become: yes
  become_user: "{{ phoenix_app_user }}"
  when: phoenix_app_clone is defined and phoenix_app_clone.changed and phoenix_app_run_brunch
  notify: phoenix_app - restart

- name: phoenix | create config directories
  file:
    path: "{{ item.file | dirname }}"
    owner: "{{ phoenix_app_user }}"
    group: "{{ phoenix_app_group }}"
    state: directory
    force: yes
  with_items: phoenix_app_configs

- name: phoenix | copy configs
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.file }}"
    owner: "{{ phoenix_app_user }}"
    group: "{{ phoenix_app_group }}"
  with_items: phoenix_app_configs

- name: mix | install dependencies
  command: mix deps.get
  args:
    chdir: "{{ phoenix_app_path }}/{{ phoenix_app_name }}"
  environment:
    MIX_ENV: "{{ phoenix_app_mix_env }}"
  become: yes
  become_user: "{{ phoenix_app_user }}"

- name: brunch | build
  command: "brunch build --production"
  args:
    chdir: "{{ phoenix_app_path }}/{{ phoenix_app_name }}"
  become: yes
  become_user: "{{ phoenix_app_user }}"
  when: (not phoenix_app_clone or phoenix_app_clone.changed) and phoenix_app_run_brunch

- name: phoenix | digest assets
  command: mix phoenix.digest
  environment:
    MIX_ENV: "{{ phoenix_app_mix_env }}"
  args:
    chdir: "{{ phoenix_app_path }}/{{ phoenix_app_name }}"
  become: yes
  become_user: "{{ phoenix_app_user }}"
  when: phoenix_app_run_brunch

- name: mix | migrate
  command: mix ecto.migrate
  environment: {{ phoenix_app_env }}
  args:
    chdir: "{{ phoenix_app_path }}/{{ phoenix_app_name }}"
  become: yes
  become_user: "{{ phoenix_app_user }}"
  when: phoenix_app_run_migrate

- name: phoenix | start application
  service:
    name: "{{ phoenix_app_name }}"
    state: "started"
